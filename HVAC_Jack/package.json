{
  "package.json": {
    "name": "hvac-jack-backend",
    "version": "1.0.0",
    "description": "HVAC Jack AI Assistant Backend Server",
    "main": "server.js",
    "scripts": {
      "start": "node server.js",
      "dev": "nodemon server.js",
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "dependencies": {
      "express": "^4.18.2",
      "cors": "^2.8.5",
      "express-rate-limit": "^6.7.0",
      "helmet": "^6.1.5",
      "dotenv": "^16.0.3"
    },
    "devDependencies": {
      "nodemon": "^2.0.22"
    },
    "engines": {
      "node": ">=16.0.0"
    },
    "keywords": ["hvac", "ai", "assistant", "claude", "backend"],
    "author": "Your Company Name",
    "license": "MIT"
  },
  ".env.example": "# HVAC Jack Backend Configuration\n# Copy this file to .env and fill in your values\n\n# Required: Your Claude API key from Anthropic\nCLAUDE_API_KEY=sk-ant-api03-your-key-here\n\n# Optional: Server configuration\nPORT=3000\nNODE_ENV=production\n\n# Optional: Frontend URL for CORS (if different from localhost)\nFRONTEND_URL=https://yourdomain.com\n\n# Optional: Rate limiting\nRATE_LIMIT_WINDOW_MS=900000\nRATE_LIMIT_MAX_REQUESTS=100",
  "README.md": "# HVAC Jack Backend Server\n\nSecure backend server for HVAC Jack AI Assistant using Claude API.\n\n## Quick Setup\n\n### 1. Install Dependencies\n```bash\nnpm install\n```\n\n### 2. Configure Environment\n```bash\ncp .env.example .env\n# Edit .env and add your Claude API key\n```\n\n### 3. Get Claude API Key\n1. Go to https://console.anthropic.com/\n2. Create an account or sign in\n3. Go to API Keys section\n4. Create a new API key\n5. Copy it to your .env file\n\n### 4. Start Server\n```bash\n# Development mode (auto-restart)\nnpm run dev\n\n# Production mode\nnpm start\n```\n\n### 5. Test Connection\nVisit: http://localhost:3000/api/health\n\n## Frontend Setup\n\n1. Update the frontend HTML file\n2. Change `this.apiEndpoint = '/api/chat'` to your server URL\n3. If running locally, use: `this.apiEndpoint = 'http://localhost:3000/api/chat'`\n\n## Deployment\n\n### Option 1: Heroku\n```bash\n# Install Heroku CLI\nheroku create your-hvac-jack-api\nheroku config:set CLAUDE_API_KEY=your-key-here\ngit push heroku main\n```\n\n### Option 2: Railway\n1. Connect your GitHub repo to Railway\n2. Add CLAUDE_API_KEY environment variable\n3. Deploy automatically\n\n### Option 3: DigitalOcean App Platform\n1. Create new app from GitHub\n2. Add environment variables\n3. Deploy\n\n## Security Features\n\n✅ API key hidden from frontend\n✅ Rate limiting (100 requests/15min)\n✅ CORS protection\n✅ Input validation\n✅ Error handling\n✅ Security headers\n\n## API Endpoints\n\n- `GET /api/health` - Health check\n- `POST /api/chat` - Send message to AI\n\n## Troubleshooting\n\n**502 Bad Gateway**: Check if server is running and CLAUDE_API_KEY is set\n\n**CORS Error**: Make sure FRONTEND_URL is set correctly in .env\n\n**Rate Limited**: Wait 15 minutes or adjust rate limits\n\n**Claude API Error**: Verify API key is valid and has credits"
}
